/*
  Arduino Nano - Peripheral Code
  --------------------------------
  This sketch waits for an incoming trigger signal on digital pin 2.
  When a HIGH signal is detected, it executes its “peripheral” code (e.g., blinking
  the onboard LED on pin 13 three times).

  Wiring:
    - Connect Digital Pin 2 of the Arduino Nano to Digital Pin 2 on the Nano BLE 33 Rev2.
    - Make sure the grounds of both boards are connected.
*/

const int triggerPin = 2;  // Pin used to receive the trigger signal
const int ledPin     = 13; // Onboard LED pin to indicate code execution

bool hasExecuted = false;  // Flag to ensure the code runs only once per trigger event

void setup() {
  Serial.begin(9600);
  pinMode(triggerPin, INPUT);  // Set the trigger pin as input
  pinMode(ledPin, OUTPUT);     // Set the LED pin as output
  
  Serial.println("Peripheral ready. Waiting for trigger signal...");
}

void loop() {
  int state = digitalRead(triggerPin);
  
  // Check if the trigger signal is HIGH and the code hasn't executed yet
  if (state == HIGH && !hasExecuted) {
    Serial.println("Trigger received. Executing peripheral code...");
    runPeripheralCode();
    hasExecuted = true;
  }
  
  // Optionally, you can add logic to allow re-triggering by resetting hasExecuted.
  delay(100);  // Small delay for stability in reading the input
}

// Function that contains the peripheral's code
void runPeripheralCode() {
  // Example action: Blink the onboard LED three times.
  for (int i = 0; i < 3; i++) {
    digitalWrite(ledPin, HIGH);
    delay(500);
    digitalWrite(ledPin, LOW);
    delay(500);
  }
  Serial.println("Peripheral action complete.");
}
